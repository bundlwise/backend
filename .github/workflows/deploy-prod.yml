name: Deploy to Production

on:
  push:
    branches:
      - prod  # Runs only on prod branch

env:
  PROJECT_ID: bundlwise16
  GAR_LOCATION: asia-south1
  SERVICE: bundlwise-backend
  REGION: asia-south1

jobs:
  deploy:
    name: Deploy to Google Cloud Run
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Cache Node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci

      - name: Google Auth
        id: auth
        uses: google-github-actions/auth@v1
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ env.PROJECT_ID }}
          install_components: 'beta'

      # ðŸ†• Download Cloud SQL Auth Proxy
      - name: Download Cloud SQL Auth Proxy
        run: |
          wget https://storage.googleapis.com/cloud-sql-connectors/cloud-sql-proxy/v2.10.1/cloud-sql-proxy.linux.amd64 -O cloud-sql-proxy
          chmod +x cloud-sql-proxy

      # ðŸ†• Start Cloud SQL Auth Proxy in the background
      - name: Start Cloud SQL Auth Proxy
        run: |
          ./cloud-sql-proxy ${{ secrets.INSTANCE_CONNECTION_NAME }} --address 127.0.0.1 --port 5432 &
          sleep 15  # Initial wait to let the proxy start
        env:
          GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}

      # âœ… Verify Cloud SQL Auth Proxy is running
      - name: Verify Cloud SQL Auth Proxy
        run: |
          for i in {1..10}; do
            if nc -zv 127.0.0.1 5432; then
              echo "Cloud SQL Auth Proxy is up."
              exit 0
            else
              echo "Waiting for Cloud SQL Auth Proxy to be ready..."
              sleep 5
            fi
          done
          echo "Cloud SQL Auth Proxy did not start in time." && exit 1

      # âœ… Run Prisma Migrations with DATABASE_URL forced inline
      - name: Run Prisma Migrations
        run: DATABASE_URL="${{ secrets.DATABASE_URL }}" npx prisma migrate deploy

      # âœ… Regenerate Prisma Client with correct DATABASE_URL
      - name: Generate Prisma Client
        run: DATABASE_URL="${{ secrets.DATABASE_URL }}" npx prisma generate

      - name: Configure Docker
        run: gcloud auth configure-docker $GAR_LOCATION-docker.pkg.dev

      - name: Build and Push Container
        run: |-
          docker build -t "$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$SERVICE/app:${{ github.sha }}" .
          docker push "$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$SERVICE/app:${{ github.sha }}"

      - name: Deploy to Cloud Run
        run: |-
          gcloud run deploy $SERVICE \
            --image "$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$SERVICE/app:${{ github.sha }}" \
            --region $REGION \
            --platform managed \
            --service-account arpit16@bundlwise16.iam.gserviceaccount.com \
            --allow-unauthenticated